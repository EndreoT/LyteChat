@implements IDisposable
@inject StateContainer StateContainer

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">LyteChat</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" >
    <ul class="nav flex-column">
        
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <a href="swagger" target="_blank"><span class="oi oi-list-rich" aria-hidden="true"></span> Lyte Chat API</a>
        </li>
        <AuthorizeView Roles="AuthenticatedUser">
            <Authorized>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="/chatgroup">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> Manage Chat Groups
                    </NavLink>
                </li>
            </Authorized>
        </AuthorizeView>

        @foreach (KeyValuePair<Guid, ChatGroupData> kv in StateContainer.ChatGroupsForUser)
        {
            string link = $"chatgroup/{kv.Key.ToString()}";
            <li class="nav-item px-3">
                <NavLink class="nav-link" href=@link Match="NavLinkMatch.All">
                    <span class="oi oi-list" aria-hidden="true"></span> @kv.Value.ChatGroup.ChatGroupName
                </NavLink>
            </li>
        }
    </ul>
</div>

@code {
    protected override void OnInitialized()
    {
        StateContainer.OnChange += StateHasChanged;
    }

    private bool collapseNavMenu = false;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    public void Dispose()
    {
        StateContainer.OnChange -= StateHasChanged;
    }
}
